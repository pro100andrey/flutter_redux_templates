#!/bin/bash

# Include log function
source $(dirname $0)/log

pushd () {
    command pushd "$@" > /dev/null
}

popd () {
    command popd "$@" > /dev/null
}

export pushd popd

function cleanup() {
    local work_dir=$1
    local rebuild=$2
    local format=$3

    log "work dir: $work_dir, rebuild: $rebuild, format: $format"
    pushd $work_dir

    log "flutter clean"
    flutter clean

    log "flutter pub upgrade"
    flutter pub upgrade

    if [  "$format" = true ]; then
        log "dart format ."
        dart format .
    fi

    cleanup_podfile "$(pwd)/ios"
    cleanup_podfile "$(pwd)/macos"

    if [ "$rebuild" = true ]; then
        log "dart run build_runner build --delete-conflicting-outputs"
        dart run build_runner build --delete-conflicting-outputs
    fi

    popd
}

function cleanup_podfile() {

    # Check if pod is installed
    if ! command -v pod &> /dev/null
    then
        log "pod could not be found"
        return
    fi
    

    local dir=$1
    local file="$dir/Podfile.lock"

    if [ -f "$file" ]; then

        pushd $dir

        log "remove podfile: $file"
        rm $file

        log "pod install --repo-update"
        pod install --repo-update

        popd
    fi
}

# clenup args: 1 dir, 2 rebuild, 3 format
cleanup "../localization" false false
cleanup "../storage" false true
cleanup "../models" true true
cleanup "../http_client" true true
cleanup "../business" true true
cleanup "../ui" true true
cleanup "../app" false true
